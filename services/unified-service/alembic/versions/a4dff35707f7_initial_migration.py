"""Initial migration

Revision ID: a4dff35707f7
Revises: 
Create Date: 2025-10-26 05:42:22.423585

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a4dff35707f7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('product_interactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.String(length=255), nullable=False),
    sa.Column('product_title', sa.Text(), nullable=False),
    sa.Column('product_category', sa.String(length=255), nullable=True),
    sa.Column('product_brand', sa.String(length=255), nullable=True),
    sa.Column('product_price', sa.Float(), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('interaction_type', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('search_query', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_product_interactions_source', 'product_interactions', ['source'], unique=False)
    op.create_index('idx_product_interactions_type', 'product_interactions', ['interaction_type'], unique=False)
    op.create_index('idx_product_interactions_user_timestamp', 'product_interactions', ['user_id', 'timestamp'], unique=False)
    op.create_table('recommendations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('recommendation_type', sa.String(length=50), nullable=False),
    sa.Column('recommendations', sa.JSON(), nullable=False),
    sa.Column('generated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_recommendations_expires', 'recommendations', ['expires_at'], unique=False)
    op.create_index('idx_recommendations_user_type', 'recommendations', ['user_id', 'recommendation_type'], unique=False)
    op.create_table('search_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('sources', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('result_count', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_search_history_query', 'search_history', ['query'], unique=False)
    op.create_index('idx_search_history_user_timestamp', 'search_history', ['user_id', 'timestamp'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('category', sa.String(length=255), nullable=False),
    sa.Column('preference_value', sa.Float(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_preferences_user_category', 'user_preferences', ['user_id', 'category'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_user_preferences_user_category', table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index('idx_search_history_user_timestamp', table_name='search_history')
    op.drop_index('idx_search_history_query', table_name='search_history')
    op.drop_table('search_history')
    op.drop_index('idx_recommendations_user_type', table_name='recommendations')
    op.drop_index('idx_recommendations_expires', table_name='recommendations')
    op.drop_table('recommendations')
    op.drop_index('idx_product_interactions_user_timestamp', table_name='product_interactions')
    op.drop_index('idx_product_interactions_type', table_name='product_interactions')
    op.drop_index('idx_product_interactions_source', table_name='product_interactions')
    op.drop_table('product_interactions')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
